// Correct placement of the plugins block at the top of the file
plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.5'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'nu.studer.jooq' version '6.0' // JOOQ 코드 생성 플러그인
}

group = 'com.costco'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	mavenCentral()
}

ext {
	set('testcontainersVersion', "1.17.6")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-jooq:3.2.1'
	implementation 'org.jooq:jooq:3.19.3'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok:1.18.26'
	runtimeOnly 'com.mysql:mysql-connector-java'
	annotationProcessor 'org.projectlombok:lombok:1.18.26'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.testcontainers:junit-jupiter:1.17.6'
	testImplementation 'org.testcontainers:mysql:1.17.6'
	// Add other dependencies...
}

// JOOQ 코드 생성 설정
jooq {
	version = '3.19.3' // 사용 중인 JOOQ 버전
	edition = nu.studer.gradle.jooq.JooqEdition.OSS
	configurations {
		main { // 'main' 소스 세트를 위한 코드 생성
			generationTool {
				logging = org.jooq.meta.jaxb.Logging.WARN
				jdbc {
					driver = 'com.mysql.cj.jdbc.Driver'
					url = 'jdbc:mysql://localhost:3306/cokomo'
					user = 'root'
					password = 'zxcvzxcv'
				}
				generator {
					database {
						name = 'org.jooq.meta.mysql.MySQLDatabase'
						inputSchema = 'your_schema'
						includes = '.*'
						excludes = ''
					}
					target {
						packageName = 'com.ggumim.purchase.entity'
						directory = 'src/main/java'
					}
				}
			}
		}
	}
}

dependencyManagement {
	imports {
		mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
